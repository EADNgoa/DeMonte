@model PagedList.IPagedList<DeMonte.BillIndex>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Bills" + ViewBag.CustName;
}

    <center>
        <h2 class="section-to-print"><b>@ViewBag.Title</b></h2>    
    </center>
<p>
    @if (ViewBag.CustID != null)
    {
        @Html.ActionLink("Create New", "Manage", new { CustID = (int)ViewBag.CustID })
        <a href="" onclick="window.history.go(-1); return false;">Back to Customers</a>
    }
</p>
<table class="table">
    <tr>       
       <th>Bill No.</th>
        <th>Customer</th>
        <th>No Of Guests</th>
        <th>Arrival Date</th>
        <th>Total Nights</th>
        <th>Room No</th>
        <th>Is Cancelled?</th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>       
        <td>
            @Html.DisplayFor(modelItem => item.BillNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Customer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NoOfGuests)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ArrivalDt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalDays)
        </td>        
        <td>
            @Html.DisplayFor(modelItem => item.RoomNo)
        </td>
        <td>
            @(item.Canceled ? "Cancelled" :  "" )
        </td>
        <td>
           @if(!item.Canceled)
           { 
                @Html.ActionLink("Edit", "Manage", new { id = item.BillID }, null)   @:|               
                @Html.ActionLink("Detail", "Details",  new { id = item.BillID }, null) @:|
                @Html.ActionLink("Receipts", "Index", "Receipt", new { BillID = item.BillID }, null) @:|
                @Html.ActionLink("Cancel", "Cancel", new { id = item.BillID }, null)
            }
        </td>
        
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
